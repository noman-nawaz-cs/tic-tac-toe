{"mappings":"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","sources":["dist/index.js"],"sourcesContent":["\"use strict\";\nlet gridSize = 3;\nlet gridArray = new Array(gridSize).fill(null).map(() => new Array(gridSize).fill(null));\nlet movesCount = 0;\nconst btn1 = document.getElementById('btn-1');\nconst btn2 = document.getElementById('btn-2');\nconst btn3 = document.getElementById('btn-3');\nconst playerX_btn = document.getElementById('player-x');\nconst playerO_btn = document.getElementById('player-o');\nconst resetButton = document.getElementById('reset-button');\nlet currentActiveButton = null;\nfunction checkRows(grid, player) {\n    for (let i = 0; i < grid.length; i++) {\n        if ((grid[i].every((item) => item === player)))\n            return true;\n    }\n    return false;\n}\nfunction checkColumns(grid, player) {\n    let flag;\n    for (let i = 0; i < grid.length; i++) {\n        flag = true;\n        for (let j = 0; j < grid[i].length; j++) {\n            if (grid[j][i] !== player)\n                flag = false;\n        }\n        if (flag)\n            return true;\n    }\n    return false;\n}\nfunction checkDiagonals(grid, player) {\n    let flag = true;\n    for (let i = 0; i < grid.length; i++) {\n        if (grid[i][i] !== player)\n            flag = false;\n    }\n    if (flag)\n        return true;\n    for (let i = 0; i < grid.length; i++) {\n        if (grid[i][grid.length - i - 1] !== player)\n            return false;\n    }\n    return true;\n}\nfunction getWinner(grid, player) {\n    return checkRows(grid, player) || checkColumns(grid, player) || checkDiagonals(grid, player);\n}\nfunction announceWinner(element, player) {\n    element.innerHTML = player;\n    element.style.color = 'green';\n    element.style.fontSize = '28px';\n    setTimeout(() => {\n        resetGrid();\n    }, 2000);\n}\nfunction resizeGrid(element, gridSize) {\n    enablePlayerButtons();\n    gridArray = new Array(gridSize).fill(null).map(() => new Array(gridSize).fill(null));\n    const currentTurn = document.getElementById('turn');\n    currentTurn.innerHTML = '';\n    element.innerHTML = '';\n    for (let i = 0; i < gridSize * gridSize; i++) {\n        const cell = document.createElement('div');\n        cell.className = 'grid-cell';\n        element.appendChild(cell);\n    }\n    element.style.gridTemplateColumns = `repeat(${gridSize}, 1fr)`;\n    element.style.gridTemplateRows = `repeat(${gridSize}, 1fr)`;\n    const resetWinnerText = document.getElementById('turn');\n    resetWinnerText.style.color = '#d32f2f';\n    resetWinnerText.style.fontSize = '1.2em';\n}\nfunction startGame(currentPlayer) {\n    disablePlayerButtons();\n    const currentTurn = document.getElementById('turn');\n    currentTurn.innerHTML = `Player ${currentPlayer}'s turn`;\n    const grid = document.getElementsByClassName('grid-cell');\n    const gridSize = Math.sqrt(grid.length);\n    for (let i = 0; i < grid.length; i++) {\n        grid[i].addEventListener('click', () => {\n            gridArray[Math.floor(i / gridSize)][i % gridSize] = currentPlayer;\n            if (grid[i].textContent === '') {\n                grid[i].textContent = currentPlayer;\n                movesCount++;\n                if (getWinner(gridArray, currentPlayer)) {\n                    announceWinner(currentTurn, `Player ${currentPlayer} wins!`);\n                    return;\n                }\n                if (movesCount === grid.length) {\n                    announceWinner(currentTurn, \"Match is drawn\");\n                    return;\n                }\n                currentPlayer = currentPlayer === 'X' ? 'O' : 'X';\n                currentTurn.innerHTML = `Player ${currentPlayer}'s turn`;\n            }\n        });\n    }\n}\nfunction resetGrid() {\n    setActiveButton(btn1);\n    movesCount = 0;\n    const gridCells = document.getElementsByClassName('grid-cell');\n    for (let i = 0; i < gridCells.length; i++) {\n        gridCells[i].textContent = '';\n    }\n    gridArray = new Array(gridSize).fill(null).map(() => new Array(gridSize).fill(null));\n    const grid = document.getElementById('grid');\n    resizeGrid(grid, gridSize);\n}\nfunction disablePlayerButtons() {\n    if (playerX_btn)\n        playerX_btn.disabled = true;\n    if (playerO_btn)\n        playerO_btn.disabled = true;\n}\nfunction enablePlayerButtons() {\n    if (playerX_btn)\n        playerX_btn.disabled = false;\n    if (playerO_btn)\n        playerO_btn.disabled = false;\n}\nfunction setActiveButton(button) {\n    if (currentActiveButton) {\n        currentActiveButton.style.backgroundColor = '';\n    }\n    button.style.backgroundColor = '#1565c0';\n    currentActiveButton = button;\n}\nwindow.addEventListener('load', () => {\n    setActiveButton(btn1);\n    const grid = document.getElementById('grid');\n    resizeGrid(grid, gridSize);\n});\nbtn1 === null || btn1 === void 0 ? void 0 : btn1.addEventListener('click', () => {\n    setActiveButton(btn1);\n    const grid = document.getElementById('grid');\n    resizeGrid(grid, 3);\n});\nbtn2 === null || btn2 === void 0 ? void 0 : btn2.addEventListener('click', () => {\n    setActiveButton(btn2);\n    const grid = document.getElementById('grid');\n    resizeGrid(grid, 5);\n});\nbtn3 === null || btn3 === void 0 ? void 0 : btn3.addEventListener('click', () => {\n    setActiveButton(btn3);\n    const grid = document.getElementById('grid');\n    resizeGrid(grid, 7);\n});\nplayerX_btn === null || playerX_btn === void 0 ? void 0 : playerX_btn.addEventListener('click', () => {\n    startGame('X');\n});\nplayerO_btn === null || playerO_btn === void 0 ? void 0 : playerO_btn.addEventListener('click', () => {\n    startGame('O');\n});\nresetButton === null || resetButton === void 0 ? void 0 : resetButton.addEventListener('click', () => {\n    resetGrid();\n});\n"],"names":[],"version":3,"file":"index.f925a820.js.map","sourceRoot":"/__parcel_source_root/"}